{
  "hash": "2afa41c8943d97f15e50a551f24bb6ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Kickstarter 1: Working with Text Data\"\ndate: \"May 24, 2024\"\ndate-modified: \"last-modified\"\nformat: html\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Overview\n\nThis kickstarter aims to provide you hands-on guide on how to work with text data. By the end of this hands-on exercise, you will be able to use appropriate R functions to perform the following tasks:\n\n-   Importing and combining multiple text files into one data.frame,\n-   Extracting data from a text string columns, and  \n-   Tidying and cleaning text data by removing markers (i.e. #*= etc). \n\n## Getting Started\n\nFirstly, install **readtext** package into R.\n\nNext, use the code chunk below to load **readtext** and **tidyverse** family of R packages into RStudio environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readtext)\n```\n:::\n\n\n## Importing and Integrating Multiple Text Files\n\nThe text data provided are stored in individual text files (i.e. txt). The folder name is called articles.\n\nUse the code chunk below to create a character object called *data_folder*. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_folder <- \"data/articles\"\n```\n:::\n\n\nNext, `readtext()` of readtxt package is used to import the text files into R and at the same time combine them into a data.frame called *text_dat*a.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_data <- readtext(\"data/articles/*\")\n```\n:::\n\n\nIt is always a good practice to check the output R object by using `class()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(text_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"readtext\"   \"data.frame\"\n```\n\n\n:::\n:::\n\n\n## Tidying the Text Data\n\nScreenshot below shows the values in *doc_id* are not tidy where by the companies and news agencies are combined together. They are separated by either *0_0* etc.\n\n![](images/image5.jpg)\n\nCode chunk below will be used to split string values in doc_id column into two columns, one for companies and another one for news agencies\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext_df <- text_data %>%\n  mutate(doc_id = str_remove(\n    doc_id, \"\\\\.txt$\")) %>%\n  separate(doc_id, \n           into = c(\"Company\", \"NewsAgency\"), \n           sep = \"__\\\\d__\\\\d__\")\n```\n:::\n\n\n::: callout-note\nThings to learn from the code chunk below:\n\n-   `str_remove()` is used to remove .txt from the text string.\n-   `mutate()` is used to update the changes into *doc_id* could.\n-   `separate()` is used to separate the company name and news agency name from doc_id column into two columns (i.e. *Company* and *NewsAgency*.)\n:::\n\nThe tidied data should look similar to the screenshot below.\n\n![](images/image6.jpg)\n\nBy examine the *text_df* tibble data.table closely, two data issues revealed. They are:\n\n-   There are text strings contain \"\\*\\*== whereby further data cleaning are required.\n-   There are ten (10) text strings are in the form of police report format and not in a typical text format.\n\n![](images/image7.jpg)\n\n::: callout-note\n### DIY\n\n- Remove \"**=+ from the string values.\n- Extract rows with police reports and save them into a new csv file for future processing and analysis.\n:::\n\nBefore moving to the next section, it is always a good practice to save the tidied tibble data.frame into a physical file for subsequent use. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(text_df, \"../VAST/data/rds/text_df.rds\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}